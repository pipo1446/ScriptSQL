
--ASPIRANTES SAENZ PE헤
--cambiar el a絪 a analizar 
--todos los valores de a絪 cambiar, por ejemplo 2019 por el que se quiere obtener
-- donde dice 1 y fin 1 utilice para saber el total de aspirantes que no est烱 de bajas o abandonos

--ASPIRANTES QUE SE INSCRIBIERON AL CURSILLO DE INGRESO PERO SE DIERON DE BAJA ANTES DE EMPEZAR

--1
SELECT  ALU_CODIGO, ALU_NOMBRE_AL, ALU_APELLIDO_AL,CONVERT(VARCHAR(10), ALU_FECHA_INGRESO_AL,103) INGRESO,
CONVERT(VARCHAR(10), ALU_FECHA_INGRESO_AL,103) INGRESO, 
 'ACTIVOS' AS MOTIVO FROM ALUMNOS A
WHERE YEAR(ALU_FECHA_INGRESO_AL) = 2019 
AND NOT EXISTS( SELECT * FROM(
-- fin 1
SELECT DISTINCT TOP 100 PERCENT   SR.SIR_DESCRIPCION, ALU_CODIGO, ALU_NOMBRE_AL, ALU_APELLIDO_AL, 
CONVERT(VARCHAR(10), ALU_FECHA_INGRESO_AL,103) INGRESO, 
 CONVERT(VARCHAR(10),HSR.HIS_FECHA,103) HIS_FECHA, 'INSCRIPTOS_EN_CURSILLO_PERO_DADOS_DE_BAJA_ANTES_DE_COMENZAR' AS MOTIVO
--AC.ALC_COA_ANO, ALC_COA_CUATRIMESTRE
--, ALC_COA_COM_CODIGO, ALC_FECHA_INSC 
FROM ALUMNOS A
INNER JOIN ALUMNO_COMISION AC
ON A.ALU_CODIGO = AC.ALC_ALU_CODIGO 
--INNER JOIN SITUACION_REVISTA SR
--ON A.ALU_SIR_CODIGO = SR.SIR_CODIGO
INNER JOIN SEDESPE헤.DBO.HISTORICO_SITUACION_REVISTA HSR
ON A.ALU_CODIGO = HSR.HIS_ALU_CODIGO 
INNER JOIN SITUACION_REVISTA SR
ON HSR.HIS_SIR_CODIGO = SR.SIR_CODIGO AND HSR.HIS_ALU_CODIGO = A.ALU_CODIGO
WHERE YEAR(ALU_FECHA_INGRESO_AL) = 2019 AND ALC_COA_ANO = 2019 AND YEAR(HSR.HIS_FECHA) = 2019 AND MONTH(HSR.HIS_FECHA) < 3   AND HSR.HIS_SIR_CODIGO IN(2,10)
--ORDER BY ALU_CODIGO

UNION

--LOS QUE SE DIERON DE BAJA O ABANDONO DURANTE EL CURSADO
SELECT DISTINCT TOP 100 PERCENT    SR.SIR_DESCRIPCION, ALU_CODIGO, ALU_NOMBRE_AL, ALU_APELLIDO_AL, 
CONVERT(VARCHAR(10), ALU_FECHA_INGRESO_AL,103) INGRESO, 
 CONVERT(VARCHAR(10),HSR.HIS_FECHA,103) HIS_FECHA,'BAJAS_DURANTE_EL_CURSADO' AS MOTIVO
--AC.ALC_COA_ANO, ALC_COA_CUATRIMESTRE
--, ALC_COA_COM_CODIGO, ALC_FECHA_INSC 
FROM ALUMNOS A
INNER JOIN ALUMNO_COMISION AC
ON A.ALU_CODIGO = AC.ALC_ALU_CODIGO 
--INNER JOIN SITUACION_REVISTA SR
--ON A.ALU_SIR_CODIGO = SR.SIR_CODIGO
INNER JOIN SEDESPE헤.DBO.HISTORICO_SITUACION_REVISTA HSR
ON A.ALU_CODIGO = HSR.HIS_ALU_CODIGO 
INNER JOIN SITUACION_REVISTA SR
ON HSR.HIS_SIR_CODIGO = SR.SIR_CODIGO AND HSR.HIS_ALU_CODIGO = A.ALU_CODIGO
WHERE YEAR(ALU_FECHA_INGRESO_AL) = 2019 AND ALC_COA_ANO = 2019 AND YEAR(HSR.HIS_FECHA) = 2019 AND MONTH(HSR.HIS_FECHA) >= 3   AND HSR.HIS_SIR_CODIGO IN(2,10)
--ORDER BY ALU_CODIGO

UNION
--ASPIRANTES QUE DADOS DE BAJA Y NO SE INSCRIBIERON A ALGUNA COMISION

SELECT DISTINCT TOP 100 PERCENT   SR.SIR_DESCRIPCION, ALU_CODIGO, ALU_NOMBRE_AL, ALU_APELLIDO_AL, 
CONVERT(VARCHAR(10), ALU_FECHA_INGRESO_AL,103) INGRESO, 
 CONVERT(VARCHAR(10),HSR.HIS_FECHA,103) HIS_FECHA, 'BAJAS Y NO CURSARON' AS MOTIVO
--AC.ALC_COA_ANO, ALC_COA_CUATRIMESTRE
--, ALC_COA_COM_CODIGO, ALC_FECHA_INSC 
FROM ALUMNOS A
--INNER JOIN ALUMNO_COMISION AC
--ON A.ALU_CODIGO = AC.ALC_ALU_CODIGO 
----INNER JOIN SITUACION_REVISTA SR
--ON A.ALU_SIR_CODIGO = SR.SIR_CODIGO
INNER JOIN SEDESPE헤.DBO.HISTORICO_SITUACION_REVISTA HSR
ON A.ALU_CODIGO = HSR.HIS_ALU_CODIGO 
INNER JOIN SITUACION_REVISTA SR
ON HSR.HIS_SIR_CODIGO = SR.SIR_CODIGO AND HSR.HIS_ALU_CODIGO = A.ALU_CODIGO
WHERE YEAR(ALU_FECHA_INGRESO_AL) = 2019 AND YEAR(HSR.HIS_FECHA) = 2019 AND MONTH(HSR.HIS_FECHA) < =3   AND HSR.HIS_SIR_CODIGO IN(2,10)
AND NOT EXISTS(SELECT * FROM ALUMNO_COMISION AC
WHERE AC.ALC_ALU_CODIGO = A.ALU_CODIGO)
--ORDER BY MOTIVO
--1
) AS T WHERE T.ALU_CODIGO = A.ALU_CODIGO)
--fin 1















SELECT 92+37
